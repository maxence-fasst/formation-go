package main

import (
	"fmt"
	"formation-go/configs"
	_ "formation-go/docs" // docs is generated by Swag CLI, you have to import it.
	"formation-go/requests"
	"formation-go/routes"
	"formation-go/routes/apiHandler"

	"github.com/joho/godotenv"
	"github.com/labstack/echo/v4"
	"github.com/labstack/echo/v4/middleware"
	echoSwagger "github.com/swaggo/echo-swagger"
)

// @title formation-go
// @version 1.0
// @description formation-go documentation server.git stat
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host localhost:8080
// @BasePath /api
func main() {
	var loadEnvError = godotenv.Load()
	if loadEnvError != nil {
		fmt.Println("Docker mode : ignore .env file")
	}

	// Check env var
	configs.CheckEnv([]string{
		"PORT",
	})

	e := echo.New()
	e.Validator = requests.NewCustomValidators()

	e.Use(middleware.LoggerWithConfig(middleware.LoggerConfig{
		Format: "method=${method}, uri=${uri}, status=${status}\n",
	}))

	e.GET("/healthcheck", routes.HealthCheckRoute)
	e.GET("/swagger/*", echoSwagger.WrapHandler)

	api := e.Group("/api")
	{
		api.POST("/person/", apiHandler.CreatePerson)
	}

	fmt.Println("SWAGGER DOCUMENTATION http://localhost:" + configs.Env().Port + "/swagger/index.html")
	err := e.Start(":" + configs.Env().Port)
	if err != nil {
		return
	}
}
